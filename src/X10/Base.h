
#ifndef X10_BASE_H
#define X10_BASE_H


#include <X10/Config.h>

#include <Arduino.h>

#include <NeoPixelBus.h>
#include <NeoPixelBrightnessBus.h>
#define NeoPixelBusType NeoPixelBrightnessBus<NeoGrbFeature, NeoEsp8266Dma800KbpsMethod>

#include <ESP8266WiFi.h>
#include <Wire.h>
#include <RtcDS1307.h>
#include <SPI.h>

#define FS_NO_GLOBALS
#include <SdFat.h>
#include <IniFile.h>

#include <BMPReader.h>

class X10_Base
{
public:

	X10_Base(
		NeoPixelBusType *leds,
		Stream &s)
		: leds(leds), s(s) {};

	virtual void begin() = 0;
	virtual void loop() = 0;

protected:

	enum class Status {
		X10,
		LEDS,
		SD,
		CFG,
		RTC,
		WIFI,
		OTA,
		WEB
	};

	uint16_t statusBitmaps[8][16] = {
		// X10
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0100010010011100,
			0b0100010110100010,
			0b0010100010100010,
			0b0010100010100010,
			0b0001000010100010,
			0b0001000010100010,
			0b0010100010100010,
			0b0010100010100010,
			0b0100010010100010,
			0b0100010010011100,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		},
		// LEDS
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0100000000100000,
			0b0100000000100000,
			0b0100010001100110,
			0b0100101010101000,
			0b0100110010100100,
			0b0100100010100010,
			0b0010011001101100,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		},
		// SD
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000010000,
			0b0000000000010000,
			0b0000011000110000,
			0b0000100001010000,
			0b0000010001010000,
			0b0000001001010000,
			0b0000110000110000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		},
		// CFG
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000010000000,
			0b0000000100000000,
			0b0000000100000000,
			0b0000110100011000,
			0b0001000110101000,
			0b0001000100101000,
			0b0001000100101000,
			0b0000110100011000,
			0b0000000000001000,
			0b0000000000110000,
			0b0000000000000000,
			0b0000000000000000
		},
		// RTC
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000100000000,
			0b0000000100000000,
			0b0000000100000000,
			0b0000110100011000,
			0b0001000110100000,
			0b0001000100100000,
			0b0001000100100000,
			0b0001000010011000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		},
		// WIFI
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000010000,
			0b0000000000100000,
			0b0000000010100100,
			0b0010001000100000,
			0b0010101010110100,
			0b0010101010100100,
			0b0010101010100100,
			0b0001010010100100,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		},
		// OTA
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000100000000,
			0b0000000100000000,
			0b0000000100000000,
			0b0000100100110000,
			0b0001010110001000,
			0b0001010100011000,
			0b0001010100101000,
			0b0000110010011000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		},
		// WEB
		{
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000010000,
			0b0000000000010000,
			0b0000000000010000,
			0b0100010010011000,
			0b0101010101010100,
			0b0101010110010100,
			0b0101010100010100,
			0b0010100011011000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000,
			0b0000000000000000
		}
	};

	NeoPixelBusType *leds;
	Stream &s;

	uint16_t xy(uint8_t x, uint8_t y);
	void fill(RgbColor color);
	void clear();

	void drawBitmap(BMPReader &bmp, uint16_t x, uint16_t y, uint16_t dx, uint16_t dy, uint16_t bmpX, uint16_t bmpY);
	void drawFrame(BMPReader &bmp, int16_t x, int16_t y);
	void drawStatus(Status status, RgbColor col);
	void status(Status status, RgbColor from, RgbColor to, uint32_t fadeTime);


};

#endif /* X10_BASE_H */
